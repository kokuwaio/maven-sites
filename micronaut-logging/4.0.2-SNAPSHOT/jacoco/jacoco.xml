<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Logging Support for Micronaut"><sessioninfo id="fv-az1385-776-90b904a" start="1713386407750" dump="1713386414906"/><package name="io/kokuwa/micronaut/logging/http/mdc"><class name="io/kokuwa/micronaut/logging/http/mdc/AuthenticationMdcFilter" sourcefilename="AuthenticationMdcFilter.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doFilter" desc="(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/filter/ServerFilterChain;)Lorg/reactivestreams/Publisher;" line="57"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/kokuwa/micronaut/logging/http/mdc/PathMdcFilter" sourcefilename="PathMdcFilter.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doFilter" desc="(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/filter/ServerFilterChain;)Lorg/reactivestreams/Publisher;" line="72"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="140"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/kokuwa/micronaut/logging/http/mdc/HeaderMdcFilter" sourcefilename="HeaderMdcFilter.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doFilter" desc="(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/filter/ServerFilterChain;)Lorg/reactivestreams/Publisher;" line="47"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$doFilter$0" desc="(Ljava/util/HashMap;Ljava/lang/String;Ljava/lang/String;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HeaderMdcFilter.java"><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="11" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="11" mb="0" cb="2"/><line nr="49" mi="0" ci="15" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AuthenticationMdcFilter.java"><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="4"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="11" mb="0" cb="2"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="1" cb="1"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PathMdcFilter.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="2"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="12" mb="0" cb="2"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="12" mb="0" cb="2"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="140"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="307"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="59"/><counter type="COMPLEXITY" missed="1" covered="21"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="3"/></package><package name="io/kokuwa/micronaut/logging/http/level"><class name="io/kokuwa/micronaut/logging/http/level/LogLevelServerFilter" sourcefilename="LogLevelServerFilter.java"><method name="&lt;init&gt;" desc="(Lio/kokuwa/micronaut/logging/LogbackUtil;Ljava/util/Optional;Ljava/util/Optional;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startTurbofilter" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stopTurbofilter" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doFilter" desc="(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/filter/ServerFilterChain;)Lorg/reactivestreams/Publisher;" line="63"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$doFilter$1" desc="(Lio/micronaut/http/filter/ServerFilterChain;Lio/micronaut/http/HttpRequest;)Lorg/reactivestreams/Publisher;" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$doFilter$0" desc="(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/filter/ServerFilterChain;Ljava/lang/String;)Lorg/reactivestreams/Publisher;" line="64"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/kokuwa/micronaut/logging/http/level/LogLevelTurboFilter" sourcefilename="LogLevelTurboFilter.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decide" desc="(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply;" line="21"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/kokuwa/micronaut/logging/http/level/LogLevelClientFilter" sourcefilename="LogLevelClientFilter.java"><method name="&lt;init&gt;" desc="(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V" line="37"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOrder" desc="()I" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doFilter" desc="(Lio/micronaut/http/MutableHttpRequest;Lio/micronaut/http/filter/ClientFilterChain;)Lorg/reactivestreams/Publisher;" line="50"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$doFilter$1" desc="(Lio/micronaut/http/MutableHttpRequest;Ljava/lang/String;)V" line="52"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$doFilter$0" desc="(Lio/micronaut/http/HttpRequest;)Ljava/util/Optional;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="LogLevelClientFilter.java"><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="7" ci="0" mb="0" cb="0"/><line nr="40" mi="8" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="10" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LogLevelTurboFilter.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="2"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="2"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="9" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LogLevelServerFilter.java"><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="12" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="53" covered="91"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="10" covered="19"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="1" covered="2"/></package><package name="io/kokuwa/micronaut/logging/http"><class name="io/kokuwa/micronaut/logging/http/AbstractMdcFilter" sourcefilename="AbstractMdcFilter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;Ljava/lang/String;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrder" desc="()I" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doFilter" desc="(Lio/micronaut/http/HttpRequest;Lio/micronaut/http/filter/ServerFilterChain;Ljava/util/Map;)Lorg/reactivestreams/Publisher;" line="42"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPrefix" desc="(Ljava/lang/String;)Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$doFilter$2" desc="(Ljava/util/Map;Lio/micronaut/http/MutableHttpResponse;)Lio/micronaut/http/MutableHttpResponse;" line="48"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$doFilter$1" desc="(Ljava/lang/String;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$doFilter$0" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractMdcFilter.java"><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></package><package name="io/kokuwa/micronaut/logging/configurator"><class name="io/kokuwa/micronaut/logging/configurator/RootAutoSelectAppenderAction" sourcefilename="RootAutoSelectAppenderAction.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="begin" desc="(Lch/qos/logback/core/joran/spi/SaxEventInterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V" line="44"><counter type="INSTRUCTION" missed="23" covered="30"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="end" desc="(Lch/qos/logback/core/joran/spi/SaxEventInterpretationContext;Ljava/lang/String;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAppender" desc="(Lch/qos/logback/classic/Logger;Ljava/lang/String;)V" line="72"><counter type="INSTRUCTION" missed="12" covered="51"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="console" desc="()Lch/qos/logback/core/Layout;" line="100"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="json" desc="()Lch/qos/logback/core/Layout;" line="107"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="gcp" desc="()Lch/qos/logback/core/Layout;" line="113"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="env" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="6" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="73" covered="133"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="20" covered="38"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/kokuwa/micronaut/logging/configurator/DefaultConfigurator" sourcefilename="DefaultConfigurator.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configure" desc="(Lch/qos/logback/classic/LoggerContext;)Lch/qos/logback/classic/spi/Configurator$ExecutionStatus;" line="20"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/kokuwa/micronaut/logging/configurator/MicronautJoranConfigurator" sourcefilename="MicronautJoranConfigurator.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addElementSelectorAndActionAssociations" desc="(Lch/qos/logback/core/joran/spi/RuleStore;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$addElementSelectorAndActionAssociations$0" desc="()Lch/qos/logback/core/joran/action/Action;" line="17"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RootAutoSelectAppenderAction.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="1" cb="1"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="1" cb="1"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="1" cb="1"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="1" cb="1"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="3" cb="1"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="1" cb="1"/><line nr="124" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="133"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="20" covered="38"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultConfigurator.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="1" cb="1"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="1" cb="1"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MicronautJoranConfigurator.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="11" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="87" covered="182"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="26" covered="52"/><counter type="COMPLEXITY" missed="12" covered="12"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="3"/></package><package name="io/kokuwa/micronaut/logging/layout"><class name="io/kokuwa/micronaut/logging/layout/JsonLayout" sourcefilename="JsonLayout.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContentType" desc="()Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="()V" line="55"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stop" desc="()V" line="61"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doLayout" desc="(Lch/qos/logback/classic/spi/ILoggingEvent;)Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toJsonMap" desc="(Lch/qos/logback/classic/spi/ILoggingEvent;)Ljava/util/Map;" line="90"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addThrowableInfo" desc="(Ljava/lang/String;ZLch/qos/logback/classic/spi/ILoggingEvent;Ljava/util/Map;)V" line="104"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addMap" desc="(Ljava/lang/String;ZLjava/util/Map;Ljava/util/Map;)V" line="116"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addTimestamp" desc="(Ljava/lang/String;ZJLjava/util/Map;)V" line="122"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/String;ZLjava/lang/String;Ljava/util/Map;)V" line="131"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatTimestamp" desc="(J)Ljava/lang/String;" line="137"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIncludeLevel" desc="(Z)V" line="151"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIncludeThreadName" desc="(Z)V" line="155"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIncludeMDC" desc="(Z)V" line="159"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIncludeLoggerName" desc="(Z)V" line="163"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIncludeFormattedMessage" desc="(Z)V" line="167"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIncludeMessage" desc="(Z)V" line="171"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIncludeException" desc="(Z)V" line="175"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIncludeContextName" desc="(Z)V" line="179"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIncludeTimestamp" desc="(Z)V" line="183"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTimestampFormat" desc="(Ljava/lang/String;)V" line="187"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTimestampFormatTimezoneId" desc="(Ljava/lang/String;)V" line="191"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setThrowableHandlingConverter" desc="(Lch/qos/logback/classic/pattern/ThrowableHandlingConverter;)V" line="195"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="321" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="91" covered="0"/><counter type="COMPLEXITY" missed="40" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/kokuwa/micronaut/logging/layout/GcpJsonLayout" sourcefilename="GcpJsonLayout.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toJsonMap" desc="(Lch/qos/logback/classic/spi/ILoggingEvent;)Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addServiceContext" desc="(Ljava/util/Map;)V" line="44"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setServiceName" desc="(Ljava/lang/String;)V" line="59"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setServiceVersion" desc="(Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="GcpJsonLayout.java"><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="10" ci="0" mb="0" cb="0"/><line nr="31" mi="9" ci="0" mb="0" cb="0"/><line nr="32" mi="8" ci="0" mb="0" cb="0"/><line nr="33" mi="9" ci="0" mb="0" cb="0"/><line nr="34" mi="8" ci="0" mb="0" cb="0"/><line nr="35" mi="8" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="0" cb="0"/><line nr="37" mi="8" ci="0" mb="0" cb="0"/><line nr="38" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="2" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="4" cb="0"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><line nr="49" mi="9" ci="0" mb="4" cb="0"/><line nr="50" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="2" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="JsonLayout.java"><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="2" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="2" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="11" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><line nr="93" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="0" cb="0"/><line nr="95" mi="8" ci="0" mb="0" cb="0"/><line nr="96" mi="8" ci="0" mb="0" cb="0"/><line nr="97" mi="8" ci="0" mb="0" cb="0"/><line nr="98" mi="9" ci="0" mb="0" cb="0"/><line nr="99" mi="7" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="4" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="2" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="4" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="7" ci="0" mb="6" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="2" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="2" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="4" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="7" ci="0" mb="4" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="6" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="2" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="321" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="91" covered="0"/><counter type="COMPLEXITY" missed="40" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="468" covered="0"/><counter type="BRANCH" missed="46" covered="0"/><counter type="LINE" missed="117" covered="0"/><counter type="COMPLEXITY" missed="51" covered="0"/><counter type="METHOD" missed="28" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="io/kokuwa/micronaut/logging"><class name="io/kokuwa/micronaut/logging/LogbackUtil" sourcefilename="LogbackUtil.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTurboFilter" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;" line="32"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTurboFilter" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Supplier;)Lch/qos/logback/classic/turbo/TurboFilter;" line="39"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTurboFilter$1" desc="(Ljava/util/function/Supplier;Ljava/lang/String;)Lch/qos/logback/classic/turbo/TurboFilter;" line="40"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTurboFilter$0" desc="(Ljava/lang/String;Lch/qos/logback/classic/turbo/TurboFilter;)Z" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="LogbackUtil.java"><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></package><package name="io/kokuwa/micronaut/logging/mdc"><class name="io/kokuwa/micronaut/logging/mdc/MDCTurboFilterConfigurer" sourcefilename="MDCTurboFilterConfigurer.java"><method name="&lt;init&gt;" desc="(Lio/kokuwa/micronaut/logging/LogbackUtil;Lio/micronaut/context/env/Environment;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="refresh" desc="()V" line="51"><counter type="INSTRUCTION" missed="3" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLogLevel" desc="(Ljava/lang/String;Lio/micronaut/logging/LogLevel;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configure" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="134"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="30"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/kokuwa/micronaut/logging/mdc/MDCTurboFilter" sourcefilename="MDCTurboFilter.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLoggers" desc="(Ljava/util/Set;)Lio/kokuwa/micronaut/logging/mdc/MDCTurboFilter;" line="30"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValues" desc="(Ljava/util/Set;)Lio/kokuwa/micronaut/logging/mdc/MDCTurboFilter;" line="37"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setKey" desc="(Ljava/lang/String;)Lio/kokuwa/micronaut/logging/mdc/MDCTurboFilter;" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLevel" desc="(Lch/qos/logback/classic/Level;)Lio/kokuwa/micronaut/logging/mdc/MDCTurboFilter;" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decide" desc="(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply;" line="61"><counter type="INSTRUCTION" missed="2" covered="53"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$decide$0" desc="(Ljava/lang/String;)Ljava/lang/Boolean;" line="71"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="115"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MDCTurboFilter.java"><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="2" cb="2"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="11" mb="0" cb="6"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="2"/><line nr="71" mi="0" ci="22" mb="0" cb="2"/><line nr="72" mi="0" ci="2" mb="0" cb="2"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="9" mb="0" cb="2"/><counter type="INSTRUCTION" missed="2" covered="115"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MDCTurboFilterConfigurer.java"><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="1" cb="1"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="11" mb="0" cb="2"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="11" mb="0" cb="0"/><line nr="73" mi="0" ci="11" mb="0" cb="0"/><line nr="74" mi="0" ci="11" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="17" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="134"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="30"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="5" covered="249"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="2" covered="54"/><counter type="COMPLEXITY" missed="3" covered="21"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="2"/></package><counter type="INSTRUCTION" missed="613" covered="955"/><counter type="BRANCH" missed="60" covered="62"/><counter type="LINE" missed="155" covered="210"/><counter type="COMPLEXITY" missed="72" covered="80"/><counter type="METHOD" missed="35" covered="55"/><counter type="CLASS" missed="3" covered="12"/></report>